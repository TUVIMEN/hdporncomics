#!/usr/bin/env python
# by Dominik Stanis≈Çaw Suchora <suchora.dominik7@gmail.com>
# License: GNU GPLv3

import sys
import os
import json

from hdporncomics import hdporncomics

hdpo = hdporncomics(wait=1.5, logger=sys.stdout)
hdpo.login(os.environ["HDPORNCOMICS_EMAIL"], os.environ["HDPORNCOMICS_PASSWORD"])


def writejson(fname, x):
    with open(fname, "w") as f:
        f.write(json.dumps(x, indent=2))


def writegen(fname, gen, pages=1):
    page = 1
    f = open(fname, "w")
    for i in gen:
        f.write(json.dumps(i, indent=2))
        f.write("\n")
        if page >= pages:
            break
        page += 1

    f.close()


os.chdir("examples")

writegen("comments.json", hdpo.get_comments(72466))

writejson(
    "comic.json",
    hdpo.get_comic(
        "https://hdporncomics.com/care-for-the-caremare-ongoing-furries-tv-movies-sex-comic/",
        comments=1,
    ),
)

writejson(
    "comic2.json",
    hdpo.get_comic(
        "https://hdporncomics.com/dictatorship-ongoing-fetish-nonconsent-reluctance-monsters-tentacles-sex-comic/",
    ),
)

writejson(
    "gay-comic.json",
    hdpo.get_comic(
        "https://hdporncomics.com/gay-manga/shadbase-hit-or-miss-me-with-that-gay-shit-eng-gay-manga/",
        comments=1,
    ),
)

writejson(
    "manhwa.json",
    hdpo.get_manhwa(
        "https://hdporncomics.com/manhwa/i-have-to-sleep-with-a-stranger-new-manhwa-porn/",
        comments=1,
    ),
)

writejson(
    "manhwa-chapter.json",
    hdpo.get_manhwa_chapter(
        "https://hdporncomics.com/manhwa/i-have-to-sleep-with-a-stranger-new-manhwa-porn/chapter-1/",
        comments=1,
    ),
)

writegen("comic-page.json", hdpo.get_pages("https://hdporncomics.com/"))

writegen(
    "artist-page.json", hdpo.get_pages("https://hdporncomics.com/artist/disarten/")
)

writegen("gay-comic-page.json", hdpo.get_pages("https://hdporncomics.com/gay-manga/"))

writegen("manhwa-page.json", hdpo.get_pages("https://hdporncomics.com/manhwa/"))

writejson(
    "subscriptions.json",
    hdpo.get_subscriptions(),
)

writegen("history.json", hdpo.get_history())

writegen("liked.json", hdpo.get_liked())

writegen("favorites.json", hdpo.get_favorites())

writegen("user-comments.json", hdpo.get_user_comments())

writejson(
    "user.json",
    hdpo.get_user("https://hdporncomics.com/author/yuri-lover/"),
)

writejson(
    "stats.json",
    hdpo.get_stats(),
)

writejson(
    "dashboard-stats.json",
    hdpo.get_dashboard_stats(),
)

writejson(
    "terms-artist.json",
    hdpo.get_terms("artist"),
)

writejson(
    "terms-tags.json",
    hdpo.get_terms("tags"),
)

writejson(
    "terms-characters.json",
    hdpo.get_terms("characters"),
)

writegen("comic-artists-list.json", hdpo.get_comics_list("artists", sort="views"))

writegen("comic-parodies-list.json", hdpo.get_comics_list("parodies", sort="count"))

writegen("comic-groups-list.json", hdpo.get_comics_list("groups"))

writejson(
    "gay-comic-groups-list.json",
    hdpo.get_gay_groups_list(),
)

writejson(
    "gay-comic-genres-list.json",
    hdpo.get_gay_genres_list(),
)

writejson(
    "gay-comic-languages-list.json",
    hdpo.get_gay_languages_list(),
)

writejson(
    "gay-comic-sections-list.json",
    hdpo.get_gay_sections_list(),
)

writejson(
    "manhwa-artists-list.json",
    hdpo.get_manhwa_artists_list(),
)

writejson(
    "manhwa-authors-list.json",
    hdpo.get_manhwa_authors_list(),
)

writejson(
    "manhwa-genres-list.json",
    hdpo.get_manhwa_genres_list(),
)


def create_notifications():
    msg = "In Search Of The Lost Cities Of Antarctica"
    hdpo.comment(215742, msg)

    c_id = 0
    for i in hdpo.get_comments(215742):
        c = i["comments"]
        assert c[0]["content"] == msg
        c_id = c[0]["id"]
        break

    msg2 = "Black Dragons Soar Above The Mountain Of Shadows"
    hdpo.comment(
        215742,
        msg2,
        parent=c_id,
    )

    c2_id = 0
    for i in hdpo.get_comments(215742):
        c = i["comments"]
        assert c[0]["id"] == c_id

        ch = c[0]["children"]
        assert ch[0]["content"] == msg2
        c2_id = ch[0]["id"]
        break

    for i in hdpo.get_notifications():
        writejson("notifications.json", i)
        break

    hdpo.notifications_clean()

    hdpo.comment_delete(c2_id)
    hdpo.comment_delete(c_id)


create_notifications()
